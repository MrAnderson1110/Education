TITLE CHANGE_1

; Вариант 3
; Программа заменяет буквы «b» и «c» заглавными в символьной
; строке, а все заглавные строчными преобразованную 
; строку на экран
; Входные параметры:
; текстовая переменная MYTEXT

.MODEL SMALL			; задаем модель памяти

.STACK 256			; выделяем память (256 байт) под стек

.DATA				; сегмент данных

				; объявляем текстовые переменные:
		; Вспомогательная переменная для отображения на экран
	LABLE_1 DB 'Before apply changes: ', '$'
		; Вспомогательная переменная для отображения исходного текста
	LABLE_2 DB 'ThIs Is a LoNg LoNg TeXT WiTh At LeaSt tWeNtY SimBoLs and Bb and Cc SiMbOlS in UppEr cAsE', 13, 10, '$'
		; Вспомогательная переменная для отображения на экран
	LABLE_3 DB 'After apply changes:  ', '$'
		; Основной текст на котором будут происходить изменения
	MYTEXT DB 'ThIs Is a LoNg LoNg TeXT WiTh At LeaSt tWeNtY SimBoLs and Bb and Cc SiMbOlS in UppEr cAsE', 13, 10, '$' 
		; вычисляем длину текста
	LEN=($-MYTEXT)-3			
	
.CODE				; сегмент кода

;-------------------------- процедура коррекции кода символа -----------------------------
;----------------------------- (замена строчного на заглавный) ------------------------------

UPPER PROC NEAR		; Точка входа в процедуру UPPER
	AND AH, 0DFh		; Побитовое 'И' AH и 0DFh
	MOV [BX], AH		; Переписать символ 
				; по адресу [BX] значением регистра AH
	RET			; Выход из процедуры
UPPER ENDP

;-------------------------- процедура коррекции кода символа -----------------------------
;----------------------------- (замена заглавного на строчный) ------------------------------

LOWER PROC NEAR		; Точка входа в процедуру LOWER
	OR AH, 020h		; Побитовое 'ИЛИ' АН и 020h
	MOV [BX], AH		; Переписать символ 
				; по адресу [BX] значением регистра AH
	RET			; Выход из процедуры
LOWER ENDP

;------------------------------------- Основная программа ------------------------------------------

Start:
	MOV AX, @DATA		; Загрузка сегмента данных
	MOV DS, AX		
	XOR AX, AX		; Очистка регистра AX

	LEA BX, MYTEXT		; Взятие относительного адреса 
				; переменной MYTEXT
	MOV CX, LEN		; Загрузить счетчик циклов		
		
;---------------------------------------- Начало тела цикла ------------------------------------------

MAIN_LOOP: 
	MOV AH, [BX]		; Переместить символ по адресу [BX] в AX
	
	CMP AH, 41h		; Если AH < 41h   
	JB UPPER_CASE	 	; перейти к проверке остальных условий 
	CMP AH, 5Ah		; Если AH > 5AH
	JA UPPER_CASE		; перейти к проверке остальных условий
	CALL LOWER		; Иначе вызвать процедуру LOWER	
	
	UPPER_CASE:	
	CMP AH, 62h		; Если текущий символ не является 'b' 
	JB SKIP		; перейти к метке SKIP
	CMP AH, 63h		; Если текущий символ не является 'c'
	JA SKIP		; перейти к метке SKIP
	CALL UPPER		; Иначе выполнить процедуру UPPER
			
SKIP:
	INC BX			; Увеличить счетчик	
;-------------------------------- Конец тела цикла -----------------------------

	LOOP MAIN_LOOP		; повторить цикл, если (CX) != 0
		
	MOV AH, 09h		; вывести на экран
	LEA DX, LABLE_1	; результат
	INT 21h		; работы программы
	LEA DX, LABLE_2	
	INT 21h
	LEA DX, LABLE_3
	INT 21h			
	LEA DX, MYTEXT				
	INT 21h				
					
	MOV AX, 4C00h		; завершить			
	INT 21h		; программу			
END Start
