Turbo Assembler	 Version 3.1	    01/06/22 17:23:41	    Page 1
LAB7\CHANGE_1\CHANGE_1.ASM



      1
      2				     ; Вариант 3
      3				     ; Программа заменяет буквы «b» и «c» заглавными в	    +
      4				     символьной
      5				     ; строке, а	все заглавные строчными преобразованную
      6				     ; строку на экран
      7				     ; Входные параметры:
      8				     ; текстовая переменная MYTEXT
      9
     10	0000			     .MODEL SMALL		     ; задаем модель памяти
     11
     12	0000			     .STACK 256			     ; выделяем	память (256 байт) под стек
     13
     14	0000			     .DATA			     ; сегмент данных
     15
     16								     ; объявляем текстовые переменные:
     17						     ; Вспомогательная переменная для		    +
     18				     отображения на экран
     19	0000  42 65 66 6F 72 65	20+	     LABLE_1 DB	'Before	apply changes: ', '$'
     20	      61 70 70 6C 79 20	63+
     21	      68 61 6E 67 65 73	3A+
     22	      20 24
     23						     ; Вспомогательная переменная для		    +
     24				     отображения исходного текста
     25	0017  54 68 49 73 20 49	73+	     LABLE_2 DB	'ThIs Is a LoNg	LoNg TeXT WiTh At LeaSt	tWeNtY SimBoLs and Bb and Cc SiMbOlS+
     26	      20 61 20 4C 6F 4E	67+  in	UppEr cAsE', 13, 10, '$'
     27	      20 4C 6F 4E 67 20	54+
     28	      65 58 54 20 57 69	54+
     29	      68 20 41 74 20 4C	65+
     30	      61 53 74 20 74 57	65+
     31	      4E 74 59 20 53 69	6D+
     32	      42 6F 4C 73 20 61	6E+
     33	      64 20 42 62 20 61	6E+
     34	      64 20 43 63 20 53	69+
     35	      4D 62 4F 6C 53 20	69+
     36	      6E 20 55 70 70 45	72+
     37	      20 63 41 73 45 0D	0A+
     38	      24
     39						     ; Вспомогательная переменная для		    +
     40				     отображения на экран
     41	0073  41 66 74 65 72 20	61+	     LABLE_3 DB	'After apply changes:  ', '$'
     42	      70 70 6C 79 20 63	68+
     43	      61 6E 67 65 73 3A	20+
     44	      20 24
     45						     ; Основной	текст на	котором будут		    +
     46				     происходить изменения
     47	008A  54 68 49 73 20 49	73+	     MYTEXT DB 'ThIs Is	a LoNg LoNg TeXT WiTh At LeaSt tWeNtY SimBoLs and Bb and Cc SiMbOlS +
     48	      20 61 20 4C 6F 4E	67+  in	UppEr cAsE', 13, 10, '$'
     49	      20 4C 6F 4E 67 20	54+
     50	      65 58 54 20 57 69	54+
     51	      68 20 41 74 20 4C	65+
     52	      61 53 74 20 74 57	65+
     53	      4E 74 59 20 53 69	6D+
     54	      42 6F 4C 73 20 61	6E+
     55	      64 20 42 62 20 61	6E+
     56	      64 20 43 63 20 53	69+
     57	      4D 62 4F 6C 53 20	69+
Turbo Assembler	 Version 3.1	    01/06/22 17:23:41	    Page 2
LAB7\CHANGE_1\CHANGE_1.ASM



     58	      6E 20 55 70 70 45	72+
     59	      20 63 41 73 45 0D	0A+
     60	      24
     61						     ; вычисляем длину текста
     62	      =0059			     LEN=($-MYTEXT)-3
     63
     64	00E6			     .CODE			     ; сегмент кода
     65
     66				     ;-------------------------- процедура коррекции кода	символа	    +
     67				     -----------------------------
     68				     ;----------------------------- (замена строчного на заглавный)	    +
     69				     ------------------------------
     70
     71	0000			     UPPER PROC	NEAR	     ; Точка входа в	процедуру UPPER
     72	0000  80 E4 DF			     AND AH, 0DFh	     ; Побитовое 'И' AH и 0DFh
     73	0003  88 27			     MOV [BX], AH	     ; Переписать символ
     74								     ; по адресу [BX] значением регистра AH
     75	0005  C3			     RET		     ; Выход из процедуры
     76	0006			     UPPER ENDP
     77
     78				     ;-------------------------- процедура коррекции кода	символа	    +
     79				     -----------------------------
     80				     ;----------------------------- (замена заглавного на строчный)	    +
     81				     ------------------------------
     82
     83	0006			     LOWER PROC	NEAR	     ; Точка входа в	процедуру LOWER
     84	0006  80 CC 20			     OR	AH, 020h	     ; Побитовое 'ИЛИ' АН	и 020h
     85	0009  88 27			     MOV [BX], AH	     ; Переписать символ
     86								     ; по адресу [BX] значением регистра AH
     87	000B  C3			     RET		     ; Выход из процедуры
     88	000C			     LOWER ENDP
     89
     90				     ;------------------------------------- Основная программа			    +
     91				     ------------------------------------------
     92
     93	000C			     Start:
     94	000C  B8 0000s			     MOV AX, @DATA	     ; Загрузка	сегмента данных
     95	000F  8E D8			     MOV DS, AX
     96	0011  33 C0			     XOR AX, AX		     ; Очистка регистра AX
     97
     98	0013  BB 008Ar			     LEA BX, MYTEXT	     ; Взятие относительного адреса
     99								     ; переменной MYTEXT
    100	0016  B9 0059			     MOV CX, LEN	     ; Загрузить счетчик циклов
    101
    102				     ;---------------------------------------- Начало тела цикла			    +
    103				     ------------------------------------------
    104
    105	0019			     MAIN_LOOP:
    106	0019  8A 27			     MOV AH, [BX]	     ; Переместить символ по	адресу [BX] в+
    107				     AX
    108
    109	001B  80 FC 41			     CMP AH, 41h	     ; Если	AH < 41h
    110	001E  72 08			     JB	UPPER_CASE	     ; перейти к проверке остальных	    +
    111				     условий
    112	0020  80 FC 5A			     CMP AH, 5Ah	     ; Если	AH > 5AH
    113	0023  77 03			     JA	UPPER_CASE	     ; перейти к проверке остальных	    +
    114				     условий
Turbo Assembler	 Version 3.1	    01/06/22 17:23:41	    Page 3
LAB7\CHANGE_1\CHANGE_1.ASM



    115	0025  E8 FFDE			     CALL LOWER		     ; Иначе вызвать процедуру LOWER
    116
    117	0028				     UPPER_CASE:
    118	0028  80 FC 62			     CMP AH, 62h	     ; Если	текущий символ не является   +
    119				     'b'
    120	002B  72 08			     JB	SKIP	     ; перейти к метке SKIP
    121	002D  80 FC 63			     CMP AH, 63h	     ; Если	текущий символ не является 'c'
    122	0030  77 03			     JA	SKIP	     ; перейти к метке SKIP
    123	0032  E8 FFCB			     CALL UPPER		     ; Иначе выполнить процедуру	UPPER
    124
    125	0035			     SKIP:
    126	0035  43			     INC BX		     ; Увеличить счетчик
    127				     ;-------------------------------- Конец тела цикла -----------------------------
    128
    129	0036  E2 E1			     LOOP MAIN_LOOP	     ; повторить цикл, если (CX) != 0
    130
    131	0038  B4 09			     MOV AH, 09h	     ; вывести на экран
    132	003A  BA 0000r			     LEA DX, LABLE_1 ; результат
    133	003D  CD 21			     INT 21h	     ; работы программы
    134	003F  BA 0017r			     LEA DX, LABLE_2
    135	0042  CD 21			     INT 21h
    136	0044  BA 0073r			     LEA DX, LABLE_3
    137	0047  CD 21			     INT 21h
    138	0049  BA 008Ar			     LEA DX, MYTEXT
    139	004C  CD 21			     INT 21h
    140
    141	004E  B8 4C00			     MOV AX, 4C00h	     ; завершить
    142	0051  CD 21			     INT 21h	     ; программу
    143				     END Start
