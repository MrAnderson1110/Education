Turbo Assembler	 Version 3.1	    01/01/22 21:06:32	    Page 1
LAB7\CHANGE_1\CHANGE_1.ASM



      1
      2				     ; Вариант 3
      3				     ; Программа заменяет строчные буквы заглавными в	    +
      4				     символьной
      5				     ; строке и выводит на экран преобразованную строку   +
      6				     на экран
      7				     ; Входные параметры:
      8				     ; текстовая переменная MYTEXT
      9
     10	0000			     .MODEL SMALL		     ; задаем модель памяти
     11	0000			     .STACK 256			     ; выделяем	память (256 байт) под стек
     12	0000			     .DATA			     ; сегмент данных
     13								     ; объявляем текстовую переменную
     14	0000  64 73 6A 6B 68 6C	4B+  MYTEXT DB 'dsjkhlKJHDflkJlksadjDjSlSLEJfaaCddvcccdebBDLKJASFLKjJASdfKLJDF', 13, 10, '$'
     15	      4A 48 44 66 6C 6B	4A+
     16	      6C 6B 73 61 64 6A	44+
     17	      6A 53 6C 53 4C 45	4A+
     18	      66 61 61 43 64 64	76+
     19	      63 63 63 64 65 62	42+
     20	      44 4C 4B 4A 41 53	46+
     21	      4C 4B 6A 4A 41 53	64+
     22	      66 4B 4C 4A 44 46	0D+
     23	      0A 24
     24	      =003E		     LEN=($-MYTEXT)-3		     ; вычисляем длину текста
     25	0041			     .CODE			     ; сегмент кода
     26
     27				     ;---------------------- процедура	коррекции кода символа	    +
     28				     ----------------------
     29				     ;----------------------- (замена строчного на заглавный)		    +
     30				     ----------------------
     31
     32	0000			     UPPER PROC	NEAR
     33	0000  80 E4 DF			     AND AH, 0DFh	     ; Побитовое 'И' AH и 0DFh
     34	0003  88 27			     MOV [BX], AH	     ; Переписать символ по адресу [BX]	    +
     35				     значением	регистра AH
     36	0005  C3			     RET		     ; Выход из процедуры
     37	0006			     UPPER ENDP
     38
     39				     ;---------------------- процедура	коррекции кода символа	    +
     40				     ---------------------
     41				     ;----------------------- (замена заглавного на строчный)		    +
     42				     ---------------------
     43
     44	0006			     LOWER PROC	NEAR
     45	0006  80 CC 20			     OR	AH, 020h	     ; Побитовое 'ИЛИ' АН	и 020h
     46	0009  88 27			     MOV [BX], AH	     ; Переписать символ по адресу [BX]	    +
     47				     значением	регистра AH
     48	000B  C3			     RET		     ; Выход из процедуры
     49	000C			     LOWER ENDP
     50
     51				     ;----------------------------- Основная программа	----------------------------
     52
     53	000C			     Start:
     54	000C  B8 0000s			     MOV AX, @DATA	     ; Загрузка	сегмента данных
     55	000F  8E D8			     MOV DS, AX
     56	0011  33 C0			     XOR AX, AX		     ; Очистка регистра AX
     57
Turbo Assembler	 Version 3.1	    01/01/22 21:06:32	    Page 2
LAB7\CHANGE_1\CHANGE_1.ASM



     58	0013  BB 0000r			     LEA BX, MYTEXT	     ; Взятие относительного адреса	    +
     59				     переменной MYTEXT
     60	0016  B9 003E			     MOV CX, LEN	     ; Загрузить счетчик циклов
     61
     62				     ;-------------------------------- Начало тела цикла	--------------------------
     63
     64	0019			     MAIN_LOOP:
     65	0019  8A 27			     MOV AH, [BX]	     ; Переместить символ по	адресу [BX] в+
     66				     AX
     67
     68	001B  80 FC 41			     CMP AH, 41h	     ; Если	AH < 41h или	AH > 5AH,
     69	001E  72 08			     JB	UPPER_CASE	     ; перейти к метке SKIP
     70	0020  80 FC 5A			     CMP AH, 5Ah
     71	0023  77 03			     JA	UPPER_CASE
     72								     ; Иначе
     73	0025  E8 FFDE			     CALL LOWER		     ; Вызвать процедуру LOWER
     74
     75	0028			     UPPER_CASE:
     76	0028  80 FC 62			     CMP AH, 62h	     ; Если	текущий символ не является   +
     77				     'b' или	'c'
     78	002B  72 08			     JB	SKIP	     ; Перейти к проверке остальных условий
     79	002D  80 FC 63			     CMP AH, 63h
     80	0030  77 03			     JA	SKIP
     81								     ; Иначе
     82	0032  E8 FFCB			     CALL UPPER		     ; Выполнить процедуру UPPER
     83
     84	0035			     SKIP:
     85	0035  43			     INC BX		     ; Увеличить счетчик
     86
     87				     ;-------------------------------- Конец тела цикла -----------------------------
     88
     89	0036  E2 E1			     LOOP MAIN_LOOP	     ; повторить цикл, если (CX) != 0
     90	0038  BA 0000r			     LEA DX, MYTEXT	     ; вывести переменную
     91	003B  B4 09			     MOV AH, 09h	     ; MYTEXT
     92	003D  CD 21			     INT 21h	     ; на экран
     93	003F  90			     NOP		     ; холостая	команда
     94	0040  B8 4C00			     MOV AX, 4C00h	     ; завершить
     95	0043  CD 21			     INT 21h	     ; программу
     96
     97				     END Start
