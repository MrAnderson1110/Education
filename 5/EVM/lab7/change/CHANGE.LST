Turbo Assembler	 Version 3.1	    01/06/22 17:23:35	    Page 1
LAB7\CHANGE\CHANGE.ASM



      1
      2				     ; Программа заменяет строчные буквы заглавными в	    +
      3				     символьной
      4				     ; строке и выводит на экран преобразованную строку   +
      5				     на экран
      6				     ; Входные параметры:
      7				     ; текстовая переменная MYTEXT
      8
      9	0000			     .MODEL SMALL		     ; задаем модель памяти
     10
     11	0000			     .STACK 256			     ; выделяем	память (256 байт) под стек
     12
     13	0000			     .DATA			     ; сегмент данных
     14								     ; объявляем текстовые переменные:
     15						     ; Вспомогательная переменная для		    +
     16				     отображения на экран
     17	0000  42 65 66 6F 72 65	20+	     LABLE_1 DB	'Before	apply changes: ', '$'
     18	      61 70 70 6C 79 20	63+
     19	      68 61 6E 67 65 73	3A+
     20	      20 24
     21						     ; Вспомогательная переменная для		    +
     22				     отображения исходного текста
     23	0017  54 68 49 73 20 49	73+	     LABLE_2 DB	'ThIs Is a LoNg	LoNg TeXT WiTh At LeaSt	tWeNtY SimBoLs and Bb and Cc SiMbOlS+
     24	      20 61 20 4C 6F 4E	67+  in	UppEr cAsE', 13, 10, '$'
     25	      20 4C 6F 4E 67 20	54+
     26	      65 58 54 20 57 69	54+
     27	      68 20 41 74 20 4C	65+
     28	      61 53 74 20 74 57	65+
     29	      4E 74 59 20 53 69	6D+
     30	      42 6F 4C 73 20 61	6E+
     31	      64 20 42 62 20 61	6E+
     32	      64 20 43 63 20 53	69+
     33	      4D 62 4F 6C 53 20	69+
     34	      6E 20 55 70 70 45	72+
     35	      20 63 41 73 45 0D	0A+
     36	      24
     37						     ; Вспомогательная переменная для		    +
     38				     отображения на экран
     39	0073  41 66 74 65 72 20	61+	     LABLE_3 DB	'After apply changes:  ', '$'
     40	      70 70 6C 79 20 63	68+
     41	      61 6E 67 65 73 3A	20+
     42	      20 24
     43						     ; Основной	текст на	котором будут		    +
     44				     происходить изменения
     45	008A  54 68 49 73 20 49	73+	     MYTEXT DB 'ThIs Is	a LoNg LoNg TeXT WiTh At LeaSt tWeNtY SimBoLs and Bb and Cc SiMbOlS +
     46	      20 61 20 4C 6F 4E	67+  in	UppEr cAsE', 13, 10, '$'
     47	      20 4C 6F 4E 67 20	54+
     48	      65 58 54 20 57 69	54+
     49	      68 20 41 74 20 4C	65+
     50	      61 53 74 20 74 57	65+
     51	      4E 74 59 20 53 69	6D+
     52	      42 6F 4C 73 20 61	6E+
     53	      64 20 42 62 20 61	6E+
     54	      64 20 43 63 20 53	69+
     55	      4D 62 4F 6C 53 20	69+
     56	      6E 20 55 70 70 45	72+
     57	      20 63 41 73 45 0D	0A+
Turbo Assembler	 Version 3.1	    01/06/22 17:23:35	    Page 2
LAB7\CHANGE\CHANGE.ASM



     58	      24
     59						     ; вычисляем длину текста
     60	      =0059			     LEN=($-MYTEXT)-3
     61
     62	00E6			     .CODE		     ; сегмент кода
     63
     64				     ;-------------------------- процедура коррекции кода	символа	    +
     65				     -----------------------------
     66	0000			     COR PROC NEAR		     ; Точка входа в	процедуру COR
     67	0000  90			     NOP		     ; Ничего не делаем
     68	0001  80 E4 DF			     AND AH, 0DFh	     ; Побитовое И AH	и 0DFh
     69	0004  88 27			     MOV [BX], AH	     ; Переписать символ по адресу
     70								     ; [BX] значением регистра	AH
     71	0006  C3			     RET		     ; Выход из процедуры
     72	0007			     COR ENDP			     ; Конец процедуры
     73				     ;--------------------------------------основная					    +
     74				     программа-------------------------------------------
     75	0007			     Start:			     ; Точка входа в	программу
     76	0007  B8 0000s			     MOV AX, @DATA	     ; Загрузка	сегмента данных
     77	000A  8E D8			     MOV DS, AX
     78	000C  33 C0			     XOR AX, AX		     ; Очистка регистра AX
     79								     ; Взятие относительного
     80	000E  BB 008Ar			     LEA BX, MYTEXT	     ; адреса переменной MYTEXT
     81	0011  B9 0059			     MOV CX, LEN	     ; Загрузить счетчик циклов
     82				     ;---------------------------------начало тела					    +
     83				     цикла----------------------------------
     84	0014			     MT1:
     85	0014  8A 27			     MOV AH, [BX]	     ; Переместить символ по	адресу [BX] в+
     86				     AX
     87	0016  80 FC 61			     CMP AH, 61h	     ; Сравнить	с возможным минимальным
     88								     ; кодом строчной буквы
     89	0019  72 08			     JB	MT2		     ; Если	AH < 61h, перейти к MT2
     90	001B  80 FC 7A			     CMP AH, 7Ah	     ; Сравнить	с максимальным		    +
     91				     возможным
     92								     ; кодом строчных букв
     93	001E  77 03			     JA	MT2		     ; Если	AH > 7Ah, перейти на MT2
     94	0020  E8 FFDD			     CALL COR		     ; Вызвать процедуру COR
     95	0023			     MT2:
     96	0023  43			     INC BX		     ; Увеличить счетчик циклов
     97				     ;------------------------конец тела						    +
     98				     цикла--------------------------------------------
     99	0024  E2 EE			     LOOP MT1		     ; повторить цикл, если (CX) != 0
    100
    101	0026  B4 09			     MOV AH, 09h
    102	0028  BA 0000r			     LEA DX, LABLE_1 ; вывести на экран
    103	002B  CD 21			     INT 21h	     ; результат
    104	002D  BA 0017r			     LEA DX, LABLE_2 ; работы программы
    105	0030  CD 21			     INT 21h
    106	0032  BA 0073r			     LEA DX, LABLE_3
    107	0035  CD 21			     INT 21h
    108	0037  BA 008Ar			     LEA DX, MYTEXT
    109	003A  CD 21			     INT 21h
    110
    111	003C  90			     NOP		     ; холостая	команда
    112	003D  B8 4C00			     MOV AX, 4C00h	     ; завершить
    113	0040  CD 21			     INT 21h	     ; программу
    114				     END Start
