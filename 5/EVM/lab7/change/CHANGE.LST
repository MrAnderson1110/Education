Turbo Assembler	 Version 3.1	    01/01/22 20:24:53	    Page 1
LAB7\CHANGE\CHANGE.ASM



      1
      2				     ; Вариант 3
      3				     ; Программа заменяет строчные буквы заглавными в	    +
      4				     символьной
      5				     ; строке и выводит на экран преобразованную строку   +
      6				     на экран
      7				     ; Входные параметры:
      8				     ; текстовая переменная MYTEXT
      9
     10	0000			     .MODEL SMALL		     ; задаем модель памяти
     11	0000			     .STACK 256			     ; выделяем	память (256 байт) под стек
     12	0000			     .DATA			     ; сегмент данных
     13								     ; объявляем текстовую переменную
     14	0000  54 68 69 73 49 73	20+  MYTEXT DB 'ThisIs My sTriGn DslLAQSkljlkfdsLJSDlKJsdf jLK dflj FlkJSDl LFJKD', 13,	10, '$'
     15	      4D 79 20 73 54 72	69+
     16	      47 6E 20 44 73 6C	4C+
     17	      41 51 53 6B 6C 6A	6C+
     18	      6B 66 64 73 4C 4A	53+
     19	      44 6C 4B 4A 73 64	66+
     20	      20 6A 4C 4B 20 64	66+
     21	      6C 6A 20 46 6C 6B	4A+
     22	      53 44 6C 20 4C 46	4A+
     23	      4B 44 0D 0A 24
     24	      =0041		     LEN=($-MYTEXT)-3		     ; вычисляем длину текста
     25	0044			     .CODE			     ; сегмент кода
     26				     ;---------------------- процедура	коррекции кода символа	    +
     27				     ---------------------
     28	0000			     COR PROC NEAR
     29	0000  90			     NOP		     ; Ничего не делаем
     30	0001  80 E4 DF			     AND AH, 0DFh	     ; Побитовое И AH	и 0DFh
     31	0004  88 27			     MOV [BX], AH	     ; Переписать символ по адресу [BX]	    +
     32				     значением	регистра AH
     33	0006  C3			     RET		     ; Выход из процедуры
     34	0007			     COR ENDP
     35				     ;-----------------------------основная						    +
     36				     программа------------------------------------
     37	0007			     Start:
     38	0007  B8 0000s			     MOV AX, @DATA	     ; Загрузка	сегмента данных
     39	000A  8E D8			     MOV DS, AX
     40	000C  33 C0			     XOR AX, AX		     ; Очистка регистра AX
     41
     42	000E  BB 0000r			     LEA BX, MYTEXT	     ; Взятие относительного адреса	    +
     43				     переменной MYTEXT
     44	0011  B9 0041			     MOV CX, LEN	     ; Загрузить счетчик циклов
     45				     ;---------------------------------начало тела					    +
     46				     цикла----------------------------------
     47	0014			     MT1:
     48	0014  8A 27			     MOV AH, [BX]	     ; Переместить символ по	адресу [BX] в+
     49				     AX
     50	0016  80 FC 61			     CMP AH, 61h	     ; Сравнить	с минимальным кодом	    +
     51				     строчных букв
     52	0019  72 08			     JB	MT2		     ; Если	AH < 61h, перейти на MT2
     53	001B  80 FC 7A			     CMP AH, 7Ah	     ; Сравнить	с максимальным кодом	    +
     54				     строчных букв
     55	001E  77 03			     JA	MT2		     ; Если	AH > 7Ah, перейти на MT2
     56	0020  E8 FFDD			     CALL COR		     ; Вызвать процедуру COR
     57	0023			     MT2:
Turbo Assembler	 Version 3.1	    01/01/22 20:24:53	    Page 2
LAB7\CHANGE\CHANGE.ASM



     58	0023  43			     INC BX		     ; Увеличить счетчик
     59				     ;------------------------конец тела						    +
     60				     цикла--------------------------------------------
     61	0024  E2 EE			     LOOP MT1		     ; повторить цикл, если (CX) != 0
     62	0026  BA 0000r			     LEA DX, MYTEXT	     ; вывести переменную
     63	0029  B4 09			     MOV AH, 09h	     ; MYTEXT
     64	002B  CD 21			     INT 21h	     ; на экран
     65	002D  90			     NOP		     ; холостая	команда
     66	002E  B8 4C00			     MOV AX, 4C00h	     ; завершить
     67	0031  CD 21			     INT 21h	     ; программу
     68
     69				     END Start
