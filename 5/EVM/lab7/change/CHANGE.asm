TITLE CHANGE

; Вариант 3
; Программа заменяет строчные буквы заглавными в символьной
; строке и выводит на экран преобразованную строку на экран
; Входные параметры:
; текстовая переменная MYTEXT

.MODEL SMALL			; задаем модель памяти
.STACK 256			; выделяем память (256 байт) под стек
.DATA				; сегмент данных
				; объявляем текстовую переменную
MYTEXT DB 'ThisIs My sTriGn DslLAQSkljlkfdsLJSDlKJsdf jLK dflj FlkJSDl LFJKD', 13, 10, '$' 
LEN=($-MYTEXT)-3		; вычисляем длину текста	
.CODE				; сегмент кода
;---------------------- процедура коррекции кода символа ---------------------
COR PROC NEAR
	NOP			; Ничего не делаем
	AND AH, 0DFh		; Побитовое И AH и 0DFh
	MOV [BX], AH		; Переписать символ по адресу [BX] значением регистра AH
	RET			; Выход из процедуры
COR ENDP
;-----------------------------основная программа------------------------------------
Start:
	MOV AX, @DATA		; Загрузка сегмента данных
	MOV DS, AX		
	XOR AX, AX		; Очистка регистра AX
	
	LEA BX, MYTEXT		; Взятие относительного адреса переменной MYTEXT
	MOV CX, LEN		; Загрузить счетчик циклов			
;---------------------------------начало тела цикла----------------------------------
MT1: 
	MOV AH, [BX]		; Переместить символ по адресу [BX] в AX
	CMP AH, 61h		; Сравнить с минимальным кодом строчных букв
	JB MT2			; Если AH < 61h, перейти на MT2
	CMP AH, 7Ah		; Сравнить с максимальным кодом строчных букв
	JA MT2			; Если AH > 7Ah, перейти на MT2
	CALL COR		; Вызвать процедуру COR
MT2: 
	INC BX			; Увеличить счетчик
;------------------------конец тела цикла--------------------------------------------
	LOOP MT1		; повторить цикл, если (CX) != 0			
	LEA DX, MYTEXT		; вывести переменную			
	MOV AH, 09h		; MYTEXT
	INT 21h		; на экран			
	NOP			; холостая команда			
	MOV AX, 4C00h		; завершить			
	INT 21h		; программу
			
END Start
